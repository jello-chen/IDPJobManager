@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
    Layout = "Shared/_Layout.cshtml";
    ViewBag.Title = "Job List";
}
@section Style{
    @*<link href="/Content/Styles/jqgrid/ui.jqgrid.css" rel="stylesheet"/>*@
    <link href="/Content/Styles/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen" />
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Jobs</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row">
    <div class="col-lg-12">
        <form class="form-horizontal" role="form">
            <fieldset>
                <div class="form-group">

                    <label class="col-sm-1 control-label" for="ds_host">Job Name</label>
                    <div class="col-sm-3">
                        <input class="form-control" id="ds_host" type="text" placeholder="Please input job name" />
                    </div>
                    <label class="col-sm-2 control-label" style="width:120px" for="dtStart">Create Time</label>
                    <div class="col-sm-2" style="width:240px;">
                        <div class='input-group date form_dateperiod' id='dtStart'>
                            <input type='text' class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <label class="col-sm-1 control-label" style="width:10px;">-</label>
                    <div class="col-sm-2" style="width:240px;">
                        <div class='input-group date form_dateperiod' id='dtEnd'>
                            <input type='text' class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="col-sm-1">
                        <button class="btn btn-primary" id="btn_search">Search</button>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="app-toolbar">
            <button class="btn btn-white btn-sm" id="btn_Add"><span class="fa fa-plus"></span>Add</button>
        </div>
    </div>
</div>
<!-- /.row -->
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Job List
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped text-center table-hover">
                        <thead>
                            <tr>
                                <th>Job Name</th>
                                <th>Assembly Name</th>
                                <th>Class Name</th>
                                <th>Cron Expression</th>
                                <th>Start Time</th>
                                <th>End Time</th>
                                <th>Operation</th>
                            </tr>
                        </thead>
                        <tbody>
                            <template v-if="rows.length>0" v-for="(row, index) in rows">
                                <tr v-if="index>=(curpage-1)*pagesize&&index<curpage*pagesize">
                                    <td>{{row.JobName}}</td>
                                    <td>{{row.AssemblyName}}</td>
                                    <td>{{row.ClassName}}</td>
                                    <td>{{row.CronExpression}}</td>
                                    <td>{{row.StartTime}}</td>
                                    <td>{{row.EndTime}}</td>
                                    <td>
                                        <a href="/Job/Edit/{{row.ID}}" title="Edit"><i class="glyphicon glyphicon-play"></i></a>
                                        <a href="/Job/Edit/{{row.ID}}" title="Edit"><i class="glyphicon glyphicon-pause"></i></a>
                                        <a href="/Job/Edit/{{row.ID}}" title="Edit"><i class="glyphicon glyphicon-stop"></i></a>
                                        <a href="/Job/Edit/{{row.ID}}" title="Edit"><i class="glyphicon glyphicon-pencil"></i></a>
                                        <a href="javascript:void(0)" title="Delete" v-on:click="deleteJob('{{row.ID}}')"><i class="glyphicon glyphicon-remove"></i></a>
                                    </td>
                                </tr>
                            </template>
                            <template v-else>
                                <tr>
                                    <td colspan="4">No data</td>
                                </tr>
                            </template>
                        </tbody>
                    </table>
                </div>
                <nav style="float:right;">
                    <ul class="pagination pagination-lg">
                        <template v-for="page in Math.ceil(rows.length/pagesize)">
                            <li v-on:click="PrePage()" id="prepage" v-if="page==1" class="disabled"><a href="#">上一页</a></li>
                            <li v-if="page==1" class="active" v-on:click="NumPage(page, $event)"><a href="#">{{page}}</a></li>
                            <li v-else v-on:click="NumPage(page, $event)"><a href="#">{{page}}</a></li>
                            <li id="nextpage" v-on:click="NextPage()" v-if="page==Math.ceil(rows.length/pagesize)"><a href="#">下一页</a></li>
                        </template>
                    </ul>
                </nav>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-12 -->
</div>


@section Scripts{
    <script src="/Content/Scripts/moment-with-locales.js"></script>
    <script src="/Content/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">

        function initDateTimePicker() {
            $('#dtStart').datetimepicker({
                format: 'YYYY-MM-DD'
            });
            $('#dtEnd').datetimepicker({
                format: 'YYYY-MM-DD',
                useCurrent: false //Important! See issue #1075
            });
            $("#dtStart").on("dp.change", function (e) {
                $('#dtEnd').data("DateTimePicker").minDate(e.date);
            });
            $("#dtEnd").on("dp.change", function (e) {
                $('#dtStart').data("DateTimePicker").maxDate(e.date);
            });
        }

        //Model
        var data = {
            rows: [
                
            ],
            pagesize: 10,
            curpage: 1,//当前页的页码
        };

        new Vue({
            el: "#container",
            mounted: function () {
                initDateTimePicker();
            },
            data: data,
            methods: {
                searchJobs: function () {
                    $.get('/Job/GetJobList/' + id, function (data) {
                        if (data) {
                            if (data.success === true) {
                                window.location.reload();
                            }
                            else {
                                BootstrapDialog.show({
                                    title: 'Delete Job Error',
                                    message: data.message.toString()
                                });
                            }
                        }
                    });
                },
                deleteJob: function (id) {
                    BootstrapDialog.confirm('Are you sure to delete this job?', function (result) {
                        if (result) {
                            $.get('/Job/Delete/' + id, function (data) {
                                if (data) {
                                    if (data.success === true) {
                                        window.location.reload();
                                    }
                                    else {
                                        BootstrapDialog.show({
                                            title: 'Delete Job Error',
                                            message: data.message.toString()
                                        });
                                    }
                                }

                            });
                        }
                    });
                },
                //上一页方法
                PrePage: function (event) {
                    $(".pagination .active").prev().trigger("click");
                },
                //下一页方法
                NextPage: function (event) {
                    $(".pagination .active").next().trigger("click");
                },
                //点击页码的方法
                NumPage: function (num, event) {
                    if (this.curpage == num) {
                        return;
                    }
                    this.curpage = num;
                    $(".pagination li").removeClass("active");
                    if (event.target.tagName.toUpperCase() == "LI") {
                        $(event.target).addClass("active");
                    }
                    else {
                        $(event.target).parent().addClass("active");
                    }
                    if (this.curpage == 1) {
                        $("#prepage").addClass("disabled");
                    }
                    else {
                        $("#prepage").removeClass("disabled");
                    }
                    if (this.curpage == Math.ceil(this.rows.length / this.pagesize)) {
                        $("#nextpage").addClass("disabled");
                    }
                    else {
                        $("#nextpage").removeClass("disabled");
                    }
                },
                loadData() {
                    let options = {
                        params: {
                            take: this.pagination.per_page,
                            page: this.pagination.current_page,
                            /* additional parameters */
                        }
                    };
                    console.log("load data");
                    console.log(this.$http);
                    this.$http.get('/Job/GetJobList', options).then(response => {
                        this.jobs = response.data.data;

                        // Overwrite pagination object
                        this.pagination = response.data.pagination; // API response edited to have pagination data under pagination object

                        // Or overwrite only values
                        /*
                          this.pagination.current_page = response.data.current_page;
                          this.pagination.last_page = response.data.last_page;
                          ...
                        */
                    }, error => {
                        // handle error
                    });
                }
            }
        });

    </script>
}
